{"version":3,"file":"static/js/187.4c39af34.chunk.js","mappings":"4RAEaA,E,QAAcC,GAAAA,GAAH,+E,SC4CxB,EAtCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,GAAkBP,EAAS,WAF1B,UAGQ,KADtBQ,EAFc,QAGXC,QAAQC,OAHG,yCAIXC,EAAAA,GAAAA,MAAY,6BAJD,OAMlBP,EAAgBI,EAAKC,SANH,kFASbE,EAAAA,GAAAA,MAAY,4CATC,0DAAH,qDAYrBL,GACD,GAAE,CAACN,KAGF,iCACE,wBAC2B,IAAxBG,EAAaO,QACZP,EAAaS,KAAI,SAAAC,GACf,OACE,UAACf,EAAD,YACE,qCAAae,EAAGC,WAChB,uBAAID,EAAGE,YAFSF,EAAGG,GAKxB,OAEL,SAAC,KAAD,CAAgBC,UAAW,IAAMC,MAAM,WAG5C,C,4ECxCKX,EAAiB,mCAAG,WAAOS,EAAIG,GAAX,2EACPA,EADO,gCAEdC,EAAAA,EAAAA,IAAA,UACDC,EAAAA,GADC,kBACiBL,EADjB,YACuBG,EADvB,oBACwCG,EAAAA,KAH1B,yDAKdF,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,GAAb,kBAA+BL,EAA/B,oBAA6CM,EAAAA,KAL/B,iCAClBC,EADkB,uBAOjBA,EAASf,MAPQ,4CAAH,wDAUvB,K,2HCZac,EAAe,mCACfD,EAAW,gCAElBG,EAAkB,mCAAG,oGACFJ,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oCACkBC,EADlB,OADE,cACnBC,EADmB,yBAKlBA,EAASf,MALS,2CAAH,qDAQxB,M","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/fetchMovieDetails.js","components/services/fetchPopularMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport fetchMovieDetails from 'components/services/fetchMovieDetails';\nimport { ReviewsItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId, 'reviews');\n        if (data.results.length === 0) {\n          return toast.error('There are no reviews yet');\n        } else {\n          setMovieReviews(data.results);\n        }\n      } catch (error) {\n        return toast.error('Something went wrong. Please try again.');\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {movieReviews.length !== 0 &&\n          movieReviews.map(el => {\n            return (\n              <ReviewsItem key={el.id}>\n                <h3>Author: {el.author}</h3>\n                <p>{el.content}</p>\n              </ReviewsItem>\n            );\n          })}\n      </ul>\n      <ToastContainer autoClose={2000} theme=\"dark\"></ToastContainer>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { PERSONAL_KEY } from './fetchPopularMovies';\nimport { BASE_URL } from './fetchPopularMovies';\n\nconst fetchMovieDetails = async (id, value) => {\n  const response = value\n    ? await axios.get(\n        `${BASE_URL}/movie/${id}/${value}?api_key=${PERSONAL_KEY}`\n      )\n    : await axios.get(`${BASE_URL}/movie/${id}?api_key=${PERSONAL_KEY}`);\n\n  return response.data;\n};\n\nexport default fetchMovieDetails;\n","import axios from 'axios';\n\nexport const PERSONAL_KEY = 'a4c56cb8fbee20099fe28460c31a452a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${PERSONAL_KEY}\n`\n  );\n  return response.data;\n};\n\nexport default fetchPopularMovies;\n"],"names":["ReviewsItem","styled","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","fetchMovieDetails","data","results","length","toast","map","el","author","content","id","autoClose","theme","value","axios","BASE_URL","PERSONAL_KEY","response","fetchPopularMovies"],"sourceRoot":""}