{"version":3,"file":"static/js/104.3bec9f4e.chunk.js","mappings":"mTAEaA,EAAWC,EAAAA,GAAAA,GAAH,+EAMRC,EAAYD,EAAAA,GAAAA,IAAH,+CAGTE,EAAWF,EAAAA,GAAAA,EAAH,qF,SCwCrB,EA1Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,GAAkBP,EAAS,WAF7B,UAGQ,KADnBQ,EAFW,QAGRC,KAAKC,OAHG,yCAIRC,EAAAA,GAAAA,MAAY,yCAJJ,OAMfP,EAAaI,EAAKC,MANH,kFASVE,EAAAA,GAAAA,MAAY,4CATF,0DAAH,qDAYlBL,GACD,GAAE,CAACN,KAGF,gCACwB,IAArBG,EAAUO,SACT,wBACGP,EAAUS,KAAI,SAAAC,GACb,OACE,UAACjB,EAAD,YACE,SAACE,EAAD,CACEgB,IAAKC,EAAAA,EAAkBF,EAAGG,aAC1BC,IAAKJ,EAAGK,QAEV,SAACnB,EAAD,UAAWc,EAAGK,SALDL,EAAGM,QAQrB,OAGL,SAAC,KAAD,CAAgBC,UAAW,IAAMC,MAAM,WAG5C,C,wIC9CYC,EAAiBzB,EAAAA,GAAAA,IAAH,0CAId0B,EAAqB1B,EAAAA,GAAAA,IAAH,2GAUlB2B,GAAa3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAH,mrB,SCRVkB,EAAkB,mCAyB/B,EAvBkB,SAAC,GAAe,IAAD,IAAZW,EAAY,EAAZA,MACXC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAC9CC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpD,OACE,iCACE,SAACb,EAAD,CAAYc,GAAIJ,EAAaK,QAA7B,sBACA,UAACjB,EAAD,YACE,gBAAKR,IAAKC,EAAkBY,EAAaV,IAAKW,KAC9C,UAACL,EAAD,YACE,wBAAKK,KACL,0CAAkBC,MAClB,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOnB,KAAI,SAAA4B,GAAK,OAAIA,EAAMtB,IAAV,IAAgBuB,KAAK,eAKlD,C,4EC5BKlC,EAAiB,mCAAG,WAAOmC,EAAIC,GAAX,2EACPA,EADO,gCAEdC,EAAAA,EAAAA,IAAA,UACDC,EAAAA,GADC,kBACiBH,EADjB,YACuBC,EADvB,oBACwCG,EAAAA,KAH1B,yDAKdF,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,GAAb,kBAA+BH,EAA/B,oBAA6CI,EAAAA,KAL/B,iCAClBC,EADkB,uBAOjBA,EAASvC,MAPQ,4CAAH,wDAUvB,K,2HCZasC,EAAe,mCACfD,EAAW,gCAElBG,EAAkB,mCAAG,oGACFJ,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oCACkBC,EADlB,OADE,cACnBC,EADmB,yBAKlBA,EAASvC,MALS,2CAAH,qDAQxB,M","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/services/fetchMovieDetails.js","components/services/fetchPopularMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n\nexport const CastImage = styled.img`\n  margin-bottom: 8px;\n`;\nexport const CastName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-hight: 1.5;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport fetchMovieDetails from 'components/services/fetchMovieDetails';\nimport { IMAGES_BASE_URL } from 'components/MovieInfo/MovieInfo';\nimport { CastItem, CastImage, CastName } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId, 'credits');\n        if (data.cast.length === 0) {\n          return toast.error('There are no information about this.');\n        } else {\n          setMovieCast(data.cast);\n        }\n      } catch (error) {\n        return toast.error('Something went wrong. Please try again.');\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCast.length !== 0 && (\n        <ul>\n          {movieCast.map(el => {\n            return (\n              <CastItem key={el.cast_id}>\n                <CastImage\n                  src={IMAGES_BASE_URL + el.profile_path}\n                  alt={el.name}\n                />\n                <CastName>{el.name}</CastName>\n              </CastItem>\n            );\n          })}\n        </ul>\n      )}\n      <ToastContainer autoClose={2000} theme=\"dark\"></ToastContainer>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  margin-left: 24px;\n  & p,\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const BackButton = styled(NavLink)`\n  padding: 4px 8px;\n  width: 60px;\n  margin-bottom: 12px;\n  border-radius: 4px;\n  background-color: #e0e0e0;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #000;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.2;\n  font-style: normal;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #e9e9e9;\n  }\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  MovieContainer,\n  MovieInfoContainer,\n  BackButton,\n} from './MovieInfo.styled';\n\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nconst MovieInfo = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, genres } = movie;\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <BackButton to={backLinkHref.current}>Go back</BackButton>\n      <MovieContainer>\n        <img src={IMAGES_BASE_URL + poster_path} alt={title} />\n        <MovieInfoContainer>\n          <h1>{title}</h1>\n          <p>Vote average: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(' ')}</p>\n        </MovieInfoContainer>\n      </MovieContainer>\n    </>\n  );\n};\n\nexport default MovieInfo;\n","import axios from 'axios';\nimport { PERSONAL_KEY } from './fetchPopularMovies';\nimport { BASE_URL } from './fetchPopularMovies';\n\nconst fetchMovieDetails = async (id, value) => {\n  const response = value\n    ? await axios.get(\n        `${BASE_URL}/movie/${id}/${value}?api_key=${PERSONAL_KEY}`\n      )\n    : await axios.get(`${BASE_URL}/movie/${id}?api_key=${PERSONAL_KEY}`);\n\n  return response.data;\n};\n\nexport default fetchMovieDetails;\n","import axios from 'axios';\n\nexport const PERSONAL_KEY = 'a4c56cb8fbee20099fe28460c31a452a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${PERSONAL_KEY}\n`\n  );\n  return response.data;\n};\n\nexport default fetchPopularMovies;\n"],"names":["CastItem","styled","CastImage","CastName","movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCast","fetchMovieDetails","data","cast","length","toast","map","el","src","IMAGES_BASE_URL","profile_path","alt","name","cast_id","autoClose","theme","MovieContainer","MovieInfoContainer","BackButton","NavLink","movie","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkHref","useRef","state","from","to","current","genre","join","id","value","axios","BASE_URL","PERSONAL_KEY","response","fetchPopularMovies"],"sourceRoot":""}