{"version":3,"file":"static/js/715.47c38db5.chunk.js","mappings":"yPAGaA,EAAiBC,EAAAA,GAAAA,IAAH,0CAIdC,EAAqBD,EAAAA,GAAAA,IAAH,2GAUlBE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mrB,2ECNVI,EAAkB,mCA6C/B,EA3CkB,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MACXC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAC9CC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpD,OACE,iCACE,SAACd,EAAD,CAAYe,GAAIJ,EAAaK,QAA7B,sBACA,UAACnB,EAAD,YACE,gBACEoB,MAAM,MACNC,IACEd,EAAcF,EAAkBE,EAAce,EAEhDC,IAAKf,KAEP,UAACN,EAAD,YACE,wBAAKM,KACL,0CAAkBC,MAClB,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAKlD,C,4ECpCKC,EAAiB,mCAAG,WAAOC,EAAIC,GAAX,2EACPA,EADO,gCAEdC,EAAAA,EAAAA,IAAA,UACDC,EAAAA,GADC,kBACiBH,EADjB,YACuBC,EADvB,oBACwCG,EAAAA,KAH1B,yDAKdF,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,GAAb,kBAA+BH,EAA/B,oBAA6CI,EAAAA,KAL/B,iCAClBC,EADkB,uBAOjBA,EAASC,MAPQ,4CAAH,wDAUvB,K,2HCZaF,EAAe,mCACfD,EAAW,gCAElBI,EAAkB,mCAAG,oGACFL,EAAAA,EAAAA,IAAA,UAClBC,EADkB,oCACkBC,EADlB,OADE,cACnBC,EADmB,yBAKlBA,EAASC,MALS,2CAAH,qDAQxB,M,wMCsCA,EA1CqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDf,EAAAA,EAAAA,GAAkBS,GAFjB,OAEdF,EAFc,OAGpBM,EAAgBN,GAHI,yEAKbS,EAAAA,GAAAA,MAAY,4CALC,yDAAH,qDAQrBD,GACD,GAAE,CAACN,KAGF,gCACGG,EAAa7B,SACZ,iCACE,SAACkC,EAAA,EAAD,CAAWvC,MAAOkC,KAClB,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMtB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,mBACA,SAAC,EAAA4B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAIN,SAAC,KAAD,CAAgBC,UAAW,IAAMC,MAAM,WAG5C,C","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/services/fetchMovieDetails.js","components/services/fetchPopularMovies.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  margin-left: 24px;\n  & p,\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const BackButton = styled(NavLink)`\n  padding: 4px 8px;\n  width: 60px;\n  margin-bottom: 12px;\n  border-radius: 4px;\n  background-color: #e0e0e0;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #000;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 12px;\n  line-height: 1.2;\n  font-style: normal;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #e9e9e9;\n  }\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  MovieContainer,\n  MovieInfoContainer,\n  BackButton,\n} from './MovieInfo.styled';\nimport defaultMoviePicture from '../../pictures/defaultMoviePicture.jpg';\n\nexport const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nconst MovieInfo = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, genres } = movie;\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  return (\n    <>\n      <BackButton to={backLinkHref.current}>Go back</BackButton>\n      <MovieContainer>\n        <img\n          width=\"200\"\n          src={\n            poster_path ? IMAGES_BASE_URL + poster_path : defaultMoviePicture\n          }\n          alt={title}\n        />\n        <MovieInfoContainer>\n          <h1>{title}</h1>\n          <p>Vote average: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(' ')}</p>\n        </MovieInfoContainer>\n      </MovieContainer>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import axios from 'axios';\nimport { PERSONAL_KEY } from './fetchPopularMovies';\nimport { BASE_URL } from './fetchPopularMovies';\n\nconst fetchMovieDetails = async (id, value) => {\n  const response = value\n    ? await axios.get(\n        `${BASE_URL}/movie/${id}/${value}?api_key=${PERSONAL_KEY}`\n      )\n    : await axios.get(`${BASE_URL}/movie/${id}?api_key=${PERSONAL_KEY}`);\n\n  return response.data;\n};\n\nexport default fetchMovieDetails;\n","import axios from 'axios';\n\nexport const PERSONAL_KEY = 'a4c56cb8fbee20099fe28460c31a452a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${PERSONAL_KEY}\n`\n  );\n  return response.data;\n};\n\nexport default fetchPopularMovies;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport fetchMovieDetails from 'components/services/fetchMovieDetails';\nimport MovieInfo from 'components/MovieInfo';\nimport Loader from 'components/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        return toast.error('Something went wrong. Please try again.');\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieDetails.genres && (\n        <>\n          <MovieInfo movie={movieDetails} />\n          <hr></hr>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <hr></hr>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      <ToastContainer autoClose={2000} theme=\"dark\"></ToastContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieContainer","styled","MovieInfoContainer","BackButton","NavLink","IMAGES_BASE_URL","movie","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkHref","useRef","state","from","to","current","width","src","defaultMoviePicture","alt","map","genre","name","join","fetchMovieDetails","id","value","axios","BASE_URL","PERSONAL_KEY","response","data","fetchPopularMovies","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","getMovieDetails","toast","MovieInfo","Suspense","fallback","Loader","autoClose","theme"],"sourceRoot":""}